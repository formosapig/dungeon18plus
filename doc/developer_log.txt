--------------- 20231122(三) ---------------
Memory management from stack overflow

That behavior is perfectly normal, assuming it does not start to affect your runtime performance (Garbage collection can affect your frame time).
There are many ways to mitigate runtime allocation of objects, one of which is to avoid creating new ones at a time that can affect game-play.

[ Loading screens ]
Use a loading screen to pre-allocate and dispose of large objects or vast amounts of small ones, this will ensure that when you get to processing the game's rendering and logic your program will not have to wait for memory allocation/GC pauses for those.

[ Object pooling ]
You can, for example, pre-instantiate objects in a cache pool, and instead of creating new ones simply borrow those instances, use them as you see fit, and when you don't need them anymore you can release them back to the pool to be used once again.
LibGDX has an effective tool for this, right out of the box, and in fact makes extensive use of it. You can read more about it and how to use it here.
For example, I often do a lot of coordinate projections back and forth between screen space and world space, and this involves using a lot of temporary Vector2 objects to store intermediate values. At the end of the program execution I get a report of usage (custom debug code, not included in release builds) that tells me if all borrowers from a specific Pool have returned their instances, how many times the type was borrowed, and how many actual instances were allocated:
TYPE <Vector2Poolable> [OK] -> Borrowed [45948], Returned [45948], Free [38], Peak free [38]
This is from 60 seconds of execution, as you can see I only ever instantiated 38 Vector2Poolable objects, which have been used ~46k times in that time span.
Make no mistake, the goal here is not strictly on saving memory usage, the key takeaway here is that I avoided dumping on the JVM the burden of figuring out and managing ~50k small instances per minute. This can quickly pile up and start affecting your frame time.

[ Strings are your enemy ]
Strings in Java are Objects that are backed internally by a char array. Since arrays are immutable (cannot grow), Strings are immutable as well. Whenever a change to a String is made, an entirely new String is created. This means that what appear as very inexpensive operations, repeated at 60 times per second, can generate a lot of work for the GC.
This is more evident when concatenating strings via the + operator, this causes at least one allocation.
The best practice is to do concatenations using something like LibGDX's StringBuilder class, and reuse it as much as possible (you can have one per class if you're not concerned with concurrency, and you can wrap one in a ThreadLocal variable otherwise). StringBuilder's approach is similare to Pooling as it grows the backing store only when needed so that at some point during execution it will not have to reallocate memory for your string manipulation needs.
Do not underestimate the impact of strings manipulation on Garbage Collection, it's not by chance that most Scene2D.ui classes within Libgdx (such as Label) accept a StringBuilder instance directly, so that updating them does not even require allocating a String from the StringBuilder's buffer in order to use it (as seen here, allocations are minimized by simply copying data around in existing buffers)

[ Final thoughts ] You don't know what you don't know and this is why, especially in game development and regardless of the language used, you are strongly encouraged to Profile your code and memory allocation. Solutions to have a look at what's going on during runtime in your program exist, these are some of my favorites:
JVisualVM Completely free, sufficient for most profiling tasks.
YourKit Java Profiler Requires a license and can easily be too expensive for non professional developers, but it's one of the most powerful tools I've ever used to profile java applications. Definitely worth having a look with a trial.

--------------- 20231116(四) ---------------
- 又拖了一個星期, 喔耶...白吃柯文哲跑去簽什麼侯柯配...笑死...
- {公主連結} 似似花（夏日） -> 128 Polly 幫忙抽的, 日期忘了...
- {公主連結} 優花梨（夏日） -> 保底 咲死....
- 如同我所預料的, 瓶頸在於 load font ... 而且只是單純 load 英文而已...不是讀取中文字型
  就大約需要 195 ms

--------------- 20231110(五) ---------------
- 啥? 連 blog 都開始不更新了...不過程式還算是有進展中...

--------------- 20231106(一) ---------------
- 以簡御繁 : 以簡便的方法去對付複雜繁多的事情。
- 製作遊戲的理念 : 化繁從簡。

--------------- 20231103(五) ---------------
- 早上精神還不錯, 但是沒有任何進度....奇怪了.....


--------------- 20231101(三) ---------------
- 停了好一陣子, 公司的進度有解決一部份...
- 克麗絲叮 一百萬個可能
- {公主連結} 克蘿茜 -> 68 公主祭

--------------- 20231026(四) ---------------
- 進展的不順利...


--------------- 20231020(五) ---------------
- 今天完全不想寫, 我也不知道為什麼...
- 但是今天沒有想睡, 至少 15:23 分時還不想睡...
- event info 先放一邊, 回想起當初做這個遊戲時, 只有四個職業, 打完骷膢王就結算, 排行榜, 結束.
- 先做一個最簡短的閉環, 再擴大, 我好像就是這樣把遊戲慢慢搞起來的.
- 目前一個模組一個模組的搬, 不知道為什麼就不想動了. why ?


--------------- 20231018(三) ---------------
- 昨天沒有寫到什麼 code , 年紀大了, 很多負擔, 沒辦法專心的寫...

--------------- 20231017(二) ---------------
- {公主連結} 雪（祭服） -> 90


--------------- 20231016(一) ---------------
- 照這則的說明 https://gamedev.stackexchange.com/questions/117236/textures-created-with-photoshop-show-up-with-a-white-border
  在 Android 有小邊線是因為縮放的問題, 使用 Texture Packer 可以解決。。。
- 參考
  https://gamedev.stackexchange.com/questions/153640/libgdx-texture-sides-are-cropped-automatically-for-seemingly-no-reason
  https://gamedev.stackexchange.com/questions/61796/sprite-sheet-textures-picking-up-edges-of-adjacent-texture
- List view case 分析
  1. 單純 insert 時, 原來的位置向下移, 空一個位置後插入.
  2. 單純 remove
     a. 下方 scroll 範圍外還有一個 view 的餘裕時, 往上拉.
     b. 上方頂到 scroll 的盡頭了, 不管下方夠不夠, 往上拉.
     c. 下方沒有 view 的餘裕, 上方還有時, 往下拉....
  3. 先 insert 後 remove　或先 remove 後 insert ...

- QQGroup 的功能
  1. child view 的 match parent ...

--------------- 20231014(六) ---------------
- 左腳腳後更痛風...
- 浪費一整天的時間...


--------------- 20231013(五) ---------------
1. 有連續點擊的 bug ，很奇怪.... 就是點一個 event 會連續消掉兩個...
2. 試著在 Android 手機上跑, 畫面很不錯, 但是 white rabbit 字型太細了...
   之前 Android 原生版本怎麼把它弄粗的.... (要跑 Android 需要在
   gradle.properties 內設定 android.useAndroidX = true
3. TextureFilter 設成 Linear 時, 在縮放會出現奇怪的線條,
   使用預設的 nearest 時, 又會變形....
   不過在手機上看時, 不會變形會變得好好的, 推測是因為 desktop 是縮小, 但 mobile 的解析度一般較大,
   變成是放大, 所以效果較好...
4. Android 開始白畫面大約 0.5 sec , 主要在 load resource.
5. Android 觸控很不靈敏, 可能原因是觸控時有位移?

--------------- 20231012(四) ---------------
- 把 list 初步改一個版本, 現在需要修 insert / remove 的動畫等等...
- list 新增 click 事件, 這樣 index 才對得起來...
- 算是跨過了一個小小的門檻...

--------------- 20231009(一) ---------------
- 下午被拖出去浪費了半天.
- 把 assets 塞進 QQView 的體系有點奇怪...
  但 java 又沒有 multi inheritance, 所以也不好搞.
- button 的 style 可以用三個 ninepatch background 來處理...

--------------- 20231007(六) ---------------
- 經過了 24 天...


--------------- 20231006(五) ---------------
- 早上來公司睡, 夢到年輕時候的事情, 忍不住感傷了起來.
- 米米減肥成功了, 不知道能維持多久?
- 公司今天提早放人, 5:30 就可以閃人了..呼~~呼~~呼~~
- 晚餐吃了兩份沙拉, 不知道明天能不能瘦下來?


--------------- 20231004(三) ---------------
- 小犬颱風經過, 風雨變大中.
- 我已等待了千年, 為何城門還不開?
- Title : 全部置中
- Select Hero : margin = 8 px, padding = 8 px
- Dungeon : margin = 0 px, widget margin = 2 px


--------------- 20231003(二) ---------------
- I want to sleep.
- 將相對座標的概念加入 QQView 中, 兩三下就搞定了.
  主要是因為 View 有 child , child 的座標是相對 parent 而不是相對原點.
- 需要對 hit 進行優化, 使用相對座標的概念, 跟 draw 時一樣...


--------------- 20231002(一) ---------------
- listview 搞定了, 帥呀~~氣河馬!!
- 吳俊德靠妖 Roger 的房間要還他.
- 更肥的我....
- 變灰階
  new Texture(Gdx.files.internal("blockee/merchant.png"), Pixmap.Format.LuminanceAlpha, true),
- {公主連結} 伊莉亞（祭服） -> 75
- 試了一些字型, 還是 white rabbit 好....

--------------- 20231001(日) ---------------
- 稍微看了一下 ScrollPane 的 code, 也是使用 openGL 的剪刀機制.
- 1. invalidate() -> layout() 重新計算大小...
  2. event 流程還沒看懂.
- 沒想到按 listview 內的按鈕還算簡單處理, 初版做好了~~ 耶~~
- 剩下捲動還沒寫, scroll 應該有點難....


--------------- 20230930(六) ---------------
- 放假第二天~~
- 預設的 GlyphLayout 沒有辦法做到畫了三行後再加上 truncate (... 省略號), 需要自己寫一個的樣子....
- 把 en 的訊息都加入 i18n 了.....


--------------- 20230928(四) ---------------
- 明天放假.
- listview 寫得不順利, 不過基礎建設就是這樣, 只要做一遍就好了.
- Me ~~ Handsome 帥 ~~ You ~~ u ~~ u ~~ Podape 很壞 ~~


---------- 20230927(三) ----------
- developer log 比較少寫了.
- 因為太累了, 也比較少寫 code 了.
- 一天一天胖起來, 睡不飽意志力也減弱了.
- 因為 listview 太難寫了, 所以先轉身去做 save game.
- save game 初版做完了, 剩下 io 要放在另一個 thread 執行, 可以參考 assetManager 怎麼做..
- listview 有點麻煩, 所以我去散步了...

---------- 20230925(一) ----------
- 星期六補班睡了一整天, 累爆了.
- 這幾天都沒寫什麼 code.
- 2019 最終版本調了不少東西, 玩起來感覺不錯. (難度增加)
- 目前卡在 listview 內, 要再思考一下怎麼做......

* game data 直接使用 Gdx.files.local 之類的 ....

---------- 20230922(五) ----------
- 今天阿拉拉的亂混了一下, 雖然有睡飽, 但沒寫什麼 code.
- 早上下載了蛇魔無雙2 ultimate , 玩了一下蠻好玩的,
  用了 XBox 360 的搖桿, 支援度很好, 類比搖桿還沒有支援.
  [2023/9/27] 後來回家隨便弄一下就有支援類比了, 超讚.
  跟用 PS2 玩起來感覺差不多了, 不過我會 3D 暈.

---------- 20230921(四) ----------
1. 今天是 921 , 早上手機有地震提示.
2. 昨天太累了, 回去就沒有寫 Code 了. 休息一下.
3. 今天中午有聚餐, 是吃龍蝦鮑魚便當.
4. 今天沒有預定要寫什麼, 休息一下.
5. 早上還是想睡耶... 有點糟糕.

* draw 的順序
  1. self->background.
  2. self->forground.
  3. child->background.
  4. child->forground.

---------- 20230920(三) ----------
1. 今天早上又想睡了, 昨天好像是 12 點睡吧, 早上為了弄擔擔麵, 所以提早 5 分鐘起床.
2. 先做 多語系支援 / 按鈕的背景 / ListView ?
3. 偉力歸於自身.
4. 發現小幸 (環山路門口盆栽旁邊的地上)

---------- 20230919(二) ----------
1. 最近天氣又變熱了, 秋老虎來了.....
2. 早上一直想睡覺, 昨天 Polly 功課又寫到 12 點了....
3. 按 android studio 的 stop desktop module 會 return Execution failed,
   按 exe 的 x 就會正常結束...

a. 每次新抓 git 都要重設 RUN -> Edit Configuration -> + -> Application
   Name : desktop
   Build and Run
     - jbr-17
     - module = project.desktop.main
     - Main Class = project.DesktopLauncher

b. 至少消掉了 JOYBOMB/gohomelee 改成 gohome 了, 爽~~
c. https://blog.csdn.net/weixin_34405332/article/details/91729068
   1. 使用 Hiero 工具要留 padding , 才不會切到別的字
   2. 更改算法為 Linear : bitmapFont.getRegion().getTexture().setFilter(TextureFilter.Linear, TextureFilter.Linear)
   3. 座標要是 int ....

---------- 20230918 ----------
1. 上了 gitHub 哇哈哈~~ 使用 formosapig 的帳號喔......
2. nine patch file 意外的好用, 甚至不需要是標準的 .9.png 格式, 直接指定上下左右的 patch 大小即可.
3. 那些 button 及 background 可能還是自己畫好了, 用小畫家凸一凸....
4. png 並沒有失真, 放大看時還真的有點問題....
5. 手繪 nine patch 可用... 雖然效果差了一些, 之後再想想辦法...

---------- 20230917 ----------
1. 完成了 QQGameMachine 及 QQScreen. 正在考慮 AssetManager 的問題.
2. TitltScreen 出來了, event 還沒有接, 也只有丟了兩個圖... 之後應該是開始開發一堆 view.

---------- 20230916 ----------
1. 試作了簡單版的 UI , 發現 libgdx scene 2d 無法滿足需求, 需要魔改.
2. 可能重做 ui 原件...因為實際使用的原件並不多, 但相關的操作比較複雜, 使用
   scene 2d 似乎幫助不大????

---------- 20230915 ----------
1. 程式無法正常結束時, 會有 java 執行結束不是返回 0 的錯誤, 使用 java 8 就不會這樣,
   我搞了很久以為編譯環境有問題, 後來才發現單純是 code 有問題, 不容易找啊~~~
2. 家中跟公司的 Android SDK 路徑要設一致, 另外家中的 Android SDK / Tool 34 好像還沒按同意使用???

~_~ 在左邊的 Build Output 內, 下面一行是直接顯示執行的結果, 我在 run desktop 模組時怎麼都搞不好,
如果往上面一行點一下, 當在那邊就顯示出來了, fuck .... 浪費我一個小時.....

---------- 20230914 ----------
過了四年多..
1. 2019 年底武漢肺炎爆發，全世界鎖國三年，死了數百萬人。
2. 確診後我的眼睛開始出問題了。
3. 過了許多年，決定用 libgdx 改寫並出 iOS 版。
4. Bluetooth 交換的功能改成使用掃 QRCode 由 url scheme 讀入資料的方式來實做.....

使用最新版在 build.gradle 中會出現一個 void org.apache ….  的錯誤,把
它昇級成 com.mobidevelop.robovm:robovm-gradle-plugin:2.3.20-SNAPSHOT 就解決了...
暫時性的....

在 gradle.properties 內要加入 android.useAndroidX=true 我也不知道為什麼...
（新開專案，都選用最新的 Android SDK 及 Android API 時，自動解決以上兩個問題了）





---------- 20190617 ----------
[20230921] 寫到這邊就沒有然後了, 而且版本也沒有發佈出去. 後來找到藍芽的替代版-> QRCode.

---------- 20190613 ----------

睡眠不足的情況下, 決策品質會變差.
然後又會導致睡眠不足, 變成惡性循環.
當然某些人不會這樣.

---------- 20190612 ----------
很容易為疾病分心, 前一陣子一直擔心糖尿病.
之後是消化不良的問題.

我是誰?我在哪裏?我在做什麼?

---------- 20190529 ----------
理論上應該要更新版本了, 不過有點奇怪....


---------- 20190523 ----------
打完荒原之後, 結算時的成績會排序.


---------- 20190517 ----------
Bug.
v 1. 沒得走還有藥水時, 會出現 Game Over , 之後再打倒王時, Game Over 不會變成 normal win . 導致最後結算時, 分數不會登記.



---------- 20190515 ----------
藍芽的功能一定要作, 初期只作一個功能就好了.
一定要作.

出去遠征的隊伍無法回來, 但是打到的戰利品及經驗值會傳回來?

1. 傳送門是資深玩家玩的內容, 在荒原打敗 3 隻巨獸後, 才能開啟傳送門.
2. 入門玩家可以設定世界的名稱以及開放別人來參觀. (就是打開藍芽)
3. 巨獸遠征:
    a. 可以光明正大的使用 all auto battle 了.
    b. 所有的遠征隊隊員不會再回來了.
    c. 異鄉取得所有遠征隊隊員身上的裝備. ...
    d. 打敗巨獸(一定次數後), 可以在自已的荒原再次挑戰同樣的巨獸.
    e. 打敗巨獸後, 取得的戰利品會傳送回來, 經驗值會傳送回來...


---------- 20190514 ----------
行路難三首 李白

金樽清酒鬥十千，玉盤珍羞直萬錢。
停杯投箸不能食，拔劍四顧心茫然。
欲渡黃河冰塞川，將登太行雪滿山。
閒來垂釣碧溪上，忽復乘舟夢日邊。
行路難！行路難！多歧路，今安在？
長風破浪會有時，直掛雲帆濟滄海。
大道如青天，我獨不得出。
羞逐長安社中兒，赤雞白雉賭梨慄。
彈劍作歌奏苦聲，曳裾王門不稱情。
淮陰市井笑韓信，漢朝公卿忌賈生。
君不見昔時燕家重郭隗，擁簪折節無嫌猜。
劇辛樂毅感恩分，輸肝剖膽效英才。
昭王白骨縈蔓草，誰人更掃黃金臺？
行路難，歸去來！
有耳莫洗潁川水，有口莫食首陽蕨。
含光混世貴無名，何用孤高比雲月？
吾觀自古賢達人，功成不退皆殞身。
子胥既棄吳江上，屈原終投湘水濱。
陸機雄才豈自保？李斯稅駕苦不早。
華亭鶴唳詎可聞？上蔡蒼鷹何足道？
君不見吳中張翰稱達生，秋風忽憶江東行。
且樂生前一杯酒，何須身後千載名？

---------- 20190513 ----------

在之前的一個時期, 產生了沒有原因的飢餓感, 懷疑是糖尿病.
開始少吃多動後, 飢餓感及虛弱的感覺更強烈. 後來就中斷開發了.

昨天右手突然出現瘀青, 到底是怎麼回事呢?
有一說是血瘀, 就是血太髒了, 需要吃清淡一點.

仔細想想:

1. 高血壓 -> 末端血液循環不好, 血液的品質不好.
2. 黃斑部病變 -> 微循環不好.
3. 莫名瘀青 -> 微血管不好.
4. 動脈硬化指數高 -> 血液不好, 微血管不好.

以我個人的經驗看來, 主要是原因:

1. 年紀大了.
2. 睡眠不足, 每天被迫去靜心繞一圈.
3. 壓力變大了.

改善的辦法:

找一個舒壓方式, 並且保証在 PM 10:00 前睡著. ???

---------- 20190506 ----------
為什麼想要開發遊戲呢?
因為想要自由一點, 不想每天固定時間去一個固定地方罰坐數個小時.
[20231019] 現在還是這個想法沒有改變.

---------- 20190503 ----------
內臟脂肪過高, 產生了胰島素抗阻的現象. 如果再不注意, 幾年之內就糖尿病了.
目前量的內臟脂肪是 21 . 至少要降到 10 以下.
以下是方法:

1. 不能喝含糖的飲料.
2. 規律運動.
3. 睡眠充足.
4. 飲食的部份, 先作到儘量不要暴飲暴食即可.

---------- 20190430 ----------
理論上明天要出一個版本, .....

X 1. DataPart 要用 Version Code 作後綴. (因為 Version Name 不改的情況下, 有可能儲存方式改了 )
     在說明要說明某一個版本以前的不支援儲檔移動, 如此一來還是使用 Version Name 作後綴, 方便管理及說明.


---------- 20190425 ----------
資料的 read / write 應該要放在 DataPart 內去處理, 丟到 Ability 的上層去作時, 一旦 Ability 的內容改變,
就得改一堆地方.
v 1. 修改所有 data 的 read/write , 都移到 DataPart 內去作.
  2. 先測試一陣子再說吧.

---------- 20190422 ----------
累到不行了. 一定要早睡. 一定要運動. 還需要適當的休息.
不然會沒有心力開發遊戲的.
[20231019] 這一天是阿蹦八歲的生日.

---------- 20190419 ----------

搞了一整天, 確定是使用設定 TypeFace 時, 硬設 Bold 的鍋.
white rabbit 的定位點好像是上面, 劃成粗體時, 就往上再多劃兩條線, 結果就劃到外面去了.
目前的解決辦法是在上面加了 font size / 8 的 padding , 這樣整體會更大點, 不管了, 效果還看得過去, 有點像置中了.

---------- 20190418 ----------

LinearLayout 有一個 baseline alignment ....
試試看這個有沒有影響.
不然 每次 wrap_content 時, 最上面都被切掉一點點. 很煩.

---------- 20190416 ----------

鑰匙改成 10 的倍數後, 發生了一些 Bug , 因此也修改了陷阱的規格.

---------- 20190415 ----------

隨性的作了一些功能, 應該 "隨時保持可發佈狀態", 避免作不下去的慘狀再度發生.
好處是不想作了就發版本, 這樣的運作可能比較有效一些.

v 1. 藥水的顯示要改好才能用. (使用技能列表應該不要列出來才對.)
  2. 所以要想辦法顯示藥水的功能....

---------- 20190411 ----------

v 1. 沒事把 Event 切割了, 切完之後的好處是不用一個 event 塞一堆屬性. memory 的 size 會變小.
- 2. 所有顯示裝備的地方都要附上背景 (Blessed, Refined, Cursed) , 目前想到的有 英雄列表內的熟練度資料, 老兵列表內的裝備, 選絕招時的裝備列表等等...
v 3. 英雄的狀態分為上下列顯示, 圖示大小各位 24 . 注意字體要略大 (比 Event)
v 4. 失落之地改為 Wilderness (荒原), Ragnarok mode 改為 Wilderness , 巨獸統一稱為 Giant ?

---------- 20190410 ----------

  1. 今天想到, 競技場每一場出現三隻, 這樣可以讓玩家規劃昇級能力. 都打完了一次給獎.
  2. 有些職業競技場較強, 考慮掉的星星變多這樣.
[20231019] 標記! 標記! 值得考慮.

---------- 20190409 ----------

v 1. 有點倦了, 也許先製作裝備列表 ? (作好了, 好像也還好吧)
v 2. 關於 ragnarok mode ... 稍微試玩了 Auto Mode , 實在是太太太好玩了, 再加作 Long Life Mode 應該更讚!
     --> 很快就刷出一堆獸魂了.
[20231018] 提問, 請問什麼是 Long Life Mode , 似乎是巨獸的血量很長一條, 可以一直不斷的挑戰直到打死為止.


---------- 20190406 ----------

v 1. 有 potion 可用也要可以 end, 否則就是強迫使用者一定要用藥水. colosseum / dungeon 作用機制不同. colosseum 會收回, dungeon 出現了就一直在.
v 2. 速度藥水的效果如果沒有增益時反而 ....  (a. 檢查速度是否比藥水低了. b. 就給它速度 4 ?) 使用 a. 方案.
v 3. apply soul bonus 有 bug ...
v 4. Event 已經分出一個 colosseumShop 的子類, 為了讀取 mastery 資料.


---------- 20190325 ----------

一段奇怪的 code , 存下來, 也許有一天會用到.

if (coin <= 2)       return  40;
else if (coin <=  4) return  80;
else if (coin <=  6) return 160;
else if (coin <=  8) return 240;
else if (coin <= 10) return 320;
else if (coin <= 12) return 440;
else if (coin <= 15) return 600;
else if (coin <= 18) return 800;
else                 return 999;

---------- 20190320 ----------

使用網路上的解法, 當 ViewPager 的 item 數量不夠多時, 就鎖定 scroll 的功能.
果然用起來很讚. 目前不打算試用其他 Action Bar 的實作了, 就這樣.

---------- 20190319 ----------
建議使用 branches 來測試某一個功能做法好不好.

請考慮以下情境:

1. 我花了 3 年的時間思考角色的技能列表該怎麼展示.
2. 我試作了 5 種角色的技能列表, 最後決定選擇其中一種.
[20231018] 所以差別是什麼? 應該是 2 比較好吧...

---------- 20190318 ----------
https://www.reddit.com/r/androiddev/comments/axk6ih/psa_do_not_update_play_billing_library_to_121/
https://github.com/googlesamples/android-play-billing/issues/143
Google Play Billing Library 1.2.X 有 Bug , 遊戲內的 ANR 及 Crash 都是 billing 相關事件.
等待更新 library 吧.

---------- 20190315 ----------

今天製作了讀取 ADID , 然後轉成 int 的 Dungeon ID .
之後可以用來作各種擴充或是識別. 目前是當成 Giant 的亂數種子,
所以刪除遊戲後再進來, 還是一樣的巨獸. 除非玩家改了 ADID .

---------- 20190308 ----------

接下來?

---------- 20190304 ----------

0 inferior  粗糙 灰色 CCCCCC    1,2
1 standard  普通 白色 FFFFFF    3,4
2 good      優秀 綠色 00FF00    5,6
3 superior  精良 藍色 0099FF    7,8
4 epic      史詩 紫色 FFCCFF
5 legend    傳奇 橘色 FF9900
6 artifact  神器 金色 FFCC00

---------- 20190304 ----------

1. 改了大約 30% 左右的 Lint warning , 累死人不償命.


---------- 20190303 ----------

1. 在競技場套用了 RecyclerView 了.
2. Lint warning
3. 裝備套用狀態, 祝福,詛咒,精鍊

---------- 20190302 ----------

1. 勉強把 RecyclerView 弄好了, 接下來用在競技場模式即可.
2.

---------- 20190225 ----------

1. 增加了各色水晶以及開發者小圓盾.
2. 新增了等級的小圓框, 很好看.
3. 道具可以套用[詛咒], [祝福], [精鍊] 的背景, 以及把數量獨立出來.
4. 需要套用優化過的 UI , 會是一個蠻大的工程.
5. 注意不要新增功能, 不然又會再死一次.

---------- 20190218 ----------

放假回家弄一弄有 Bug , 後來就放棄了.
已經開發到一半的 d18 版本, 界面優化的部份可以拷貝的.
不要增加任何遊戲的 "內容".

---------- 20190215 ----------

整理一下還需要修什麼.

[ ] 0. 上 git ... ( 使用 assembla 的 git 出了一堆問題 )
[ ] 1. 確認可以使用 promo code.
[ ] 2. 確認由 1.6.2 -> 1.6.3 的存檔不會壞掉.
[v] 3. 一些界面優化
       a. Dungeon, Colosseum mode's loot info become fixed view.
       b. add message in barrack view.
[ ] 4. Lint Warning 看要不要修一修.

---------- 20190212 ----------

1. 差點忘記了 keystore 的密碼以及別名 pw = 68255410 alias = qqhouse
2. 使用了 billing library 1.2 ...
3. 設定了 auto sign release , 方便多了.
4. 使用 2016/10 的版本開始作, 這個版本開始使用 recycler view 了.

! 還沒打過的怪物不會顯示數據. (20190303 補充, 前幾天試作了, 感覺不好, 放棄)

---------- 20190211 ----------

今天是我 44 歲的生日, 過年時阿德問起了遊戲怎麼玩; 回家後馬上在 ptt 收到玩家來信.
所以才打算更新.

看了一下 assembla , 發現一直到 2016 年 10 月份都還有在改 code , 之後就沒有了.

回想起來是 Bluetooth Mode 太難作了, 作到一半放棄了.

1. 新增 values-zh-rTW , 這樣一來才有繁中. (Android 7.0 以上的 Bug)